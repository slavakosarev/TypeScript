import { responseToJson, dateToUnixStamp } from './search.js';
import { APIlocal } from './APIlocal.js';
import { renderToast } from './lib.js';
export function book(placeId, checkInDate, checkOutDate) {
    if (placeId && checkInDate && checkOutDate) {
        const data = responseToJson(fetch(`http://localhost:5500/places/${placeId}?` +
            `checkInDate=${dateToUnixStamp(checkInDate)}&` +
            `checkOutDate=${dateToUnixStamp(checkOutDate)}&`, { method: 'PATCH' }));
        if (data) {
            const bookRes = {
                'id': placeId,
                'checkIn': checkInDate.getTime(),
                'checkOut': checkOutDate.getTime()
            };
            renderToast({ text: `Подтвердите бронь номера <b>${placeId}</b> <br>с <i>${new Date(checkInDate).toLocaleString('en-CA')}</i> <br>по <i>${new Date(checkOutDate).toLocaleString('ru-RU')}</i>`, type: 'success' }, {
                name: 'Ок', handler: () => {
                    console.log('Уведомление закрыто');
                    APIlocal.set('booked', bookRes);
                }
            });
        }
    }
    else {
        return false;
    }
}
export function bookStart() {
    document.querySelectorAll('.result-info--footer button').forEach((elem) => {
        elem.addEventListener('click', (e) => {
            const checkInDate = new Date(document.getElementById('check-in-date').getAttribute('value'));
            const checkOutDate = new Date(document.getElementById('check-out-date').getAttribute('value'));
            const target = e.target;
            const placeId = target.closest('.result').getAttribute('id').substring(5);
            book(placeId, checkInDate, checkOutDate);
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9va2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ib29raW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFBO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFDeEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFVBQVUsQ0FBQTtBQUV0QyxNQUFNLFVBQVUsSUFBSSxDQUFDLE9BQXdCLEVBQUUsV0FBd0IsRUFBRSxZQUF5QjtJQUVoRyxJQUFJLE9BQU8sSUFBSSxXQUFXLElBQUksWUFBWSxFQUFFO1FBRTFDLE1BQU0sSUFBSSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBRS9CLGdDQUFnQyxPQUFPLEdBQUc7WUFDMUMsZUFBZSxlQUFlLENBQUMsV0FBVyxDQUFDLEdBQUc7WUFDOUMsZ0JBQWdCLGVBQWUsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUNoRCxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FDcEIsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxJQUFJLEVBQUU7WUFFUixNQUFNLE9BQU8sR0FBRztnQkFDZCxJQUFJLEVBQUUsT0FBTztnQkFDYixTQUFTLEVBQUUsV0FBVyxDQUFDLE9BQU8sRUFBRTtnQkFDaEMsVUFBVSxFQUFFLFlBQVksQ0FBQyxPQUFPLEVBQUU7YUFDbkMsQ0FBQTtZQUNELFdBQVcsQ0FDVCxFQUFFLElBQUksRUFBRSwrQkFBK0IsT0FBTyxpQkFBaUIsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUNyTTtnQkFDRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUU7b0JBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQTtvQkFDbEMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUE7Z0JBQ2pDLENBQUM7YUFDRixDQUNGLENBQUE7U0FDRjtLQUNGO1NBQ0k7UUFDSCxPQUFPLEtBQUssQ0FBQTtLQUNiO0FBQ0gsQ0FBQztBQUlELE1BQU0sVUFBVSxTQUFTO0lBRXZCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1FBQ3hFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFhLEVBQUUsRUFBRTtZQUUvQyxNQUFNLFdBQVcsR0FBUyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO1lBQ2xHLE1BQU0sWUFBWSxHQUFTLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQTtZQUNwRyxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBaUIsQ0FBQztZQUNuQyxNQUFNLE9BQU8sR0FBb0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRTNGLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzcG9uc2VUb0pzb24sIGRhdGVUb1VuaXhTdGFtcCB9IGZyb20gJy4vc2VhcmNoLmpzJ1xuaW1wb3J0IHsgQVBJbG9jYWwgfSBmcm9tICcuL0FQSWxvY2FsLmpzJ1xuaW1wb3J0IHsgcmVuZGVyVG9hc3QgfSBmcm9tICcuL2xpYi5qcydcblxuZXhwb3J0IGZ1bmN0aW9uIGJvb2socGxhY2VJZDogc3RyaW5nIHwgbnVtYmVyLCBjaGVja0luRGF0ZTogRGF0ZSB8IG51bGwsIGNoZWNrT3V0RGF0ZTogRGF0ZSB8IG51bGwpIHtcblxuICBpZiAocGxhY2VJZCAmJiBjaGVja0luRGF0ZSAmJiBjaGVja091dERhdGUpIHtcblxuICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZVRvSnNvbihmZXRjaChcblxuICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6NTUwMC9wbGFjZXMvJHtwbGFjZUlkfT9gICtcbiAgICAgIGBjaGVja0luRGF0ZT0ke2RhdGVUb1VuaXhTdGFtcChjaGVja0luRGF0ZSl9JmAgK1xuICAgICAgYGNoZWNrT3V0RGF0ZT0ke2RhdGVUb1VuaXhTdGFtcChjaGVja091dERhdGUpfSZgLFxuICAgICAgeyBtZXRob2Q6ICdQQVRDSCcgfVxuICAgICkpO1xuICAgIGlmIChkYXRhKSB7XG5cbiAgICAgIGNvbnN0IGJvb2tSZXMgPSB7XG4gICAgICAgICdpZCc6IHBsYWNlSWQsXG4gICAgICAgICdjaGVja0luJzogY2hlY2tJbkRhdGUuZ2V0VGltZSgpLFxuICAgICAgICAnY2hlY2tPdXQnOiBjaGVja091dERhdGUuZ2V0VGltZSgpXG4gICAgICB9XG4gICAgICByZW5kZXJUb2FzdChcbiAgICAgICAgeyB0ZXh0OiBg0J/QvtC00YLQstC10YDQtNC40YLQtSDQsdGA0L7QvdGMINC90L7QvNC10YDQsCA8Yj4ke3BsYWNlSWR9PC9iPiA8YnI+0YEgPGk+JHtuZXcgRGF0ZShjaGVja0luRGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ2VuLUNBJyl9PC9pPiA8YnI+0L/QviA8aT4ke25ldyBEYXRlKGNoZWNrT3V0RGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ3J1LVJVJyl9PC9pPmAsIHR5cGU6ICdzdWNjZXNzJyB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogJ9Ce0LonLCBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0KPQstC10LTQvtC80LvQtdC90LjQtSDQt9Cw0LrRgNGL0YLQvicpXG4gICAgICAgICAgICBBUElsb2NhbC5zZXQoJ2Jvb2tlZCcsIGJvb2tSZXMpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApXG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cblxuXG5leHBvcnQgZnVuY3Rpb24gYm9va1N0YXJ0KCk6IGFueSB7XG5cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJlc3VsdC1pbmZvLS1mb290ZXIgYnV0dG9uJykuZm9yRWFjaCgoZWxlbSkgPT4ge1xuICAgIGVsZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZTogTW91c2VFdmVudCkgPT4ge1xuXG4gICAgICBjb25zdCBjaGVja0luRGF0ZTogRGF0ZSA9IG5ldyBEYXRlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGVjay1pbi1kYXRlJykuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKVxuICAgICAgY29uc3QgY2hlY2tPdXREYXRlOiBEYXRlID0gbmV3IERhdGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoZWNrLW91dC1kYXRlJykuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKVxuICAgICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQgYXMgRWxlbWVudDtcbiAgICAgIGNvbnN0IHBsYWNlSWQ6IHN0cmluZyB8IG51bWJlciA9IHRhcmdldC5jbG9zZXN0KCcucmVzdWx0JykuZ2V0QXR0cmlidXRlKCdpZCcpLnN1YnN0cmluZyg1KTtcblxuICAgICAgYm9vayhwbGFjZUlkLCBjaGVja0luRGF0ZSwgY2hlY2tPdXREYXRlKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXX0=